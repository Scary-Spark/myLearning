#  create a database
CREATE DATABASE IF NOT EXISTS myDB;

#drop a database
DROP DATABASE IF EXISTS myDB;

# Show all the database of the server
SHOW DATABASES;

# use a database
USE college;

# creating a table inside database
# NOT NULL: meaning that value should not be null
CREATE TABLE student (
	id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT NOT NULL
);

# print table data
SELECT * FROM student;

# insert data into table
INSERT INTO student 
VALUES (1, "AMAN", 25);

# insert multiple values
INSERT INTO student(id,name,age)
VALUES
(2,'Rahim', 23),
(3,'Karim',45),
(4,'Safiq',56);

# Show all tabels
SHOW TABLES;

# set default value of any column
CREATE TABLE employee (
	salary INT DEFAULT 25000
);

# contraints
# it can limit the values allowed in a column
CREATE TABLE city (
	id INT PRIMARY KEY,
    city VARCHAR(50),
    age INT,
    CONSTRAINT age_check
    CHECK (age>=18 AND CITY=="DHAKA")
);

# specific SELECT
SELECT col1, col2 FROM table_name;

# print only unique values
SELECT DISTINCT city FROM student;

# Clauses:
# To define some conditions
SELECT col1, col2 FROM table_name
WHERE conditions;
# AND OR also exit in here

# example
SELECT * FROM student WHERE marks>=80
AND city=="DHAKA";

# also possible
SELECT * FROM student
WHERE marks+10>100;

# select from a range
SELECT * FROM student
WHERE marks BETWEEN 80 AND 100;

# IN Operator
# Matches any values in the list
SELECT * FROM student
WHERE city IN("Delhi", "Dhaka");

# NOT Operator
# to negate given conditions
SELECT * FROM student
WHERE city NOT IN("Delhi","Dhaka");

# limit no of rows should print
SELECT * FROM student LIMIT 3;

# Ascending order:
SELECT * FROM student 
ORDER BY city ASC;

# Descending order:
SELECT * FROM studnet
ORDER BY marks DESC;
